*clighter8*	Clighter8: Vim plugin for c/c++ developers and Vim lovers

==============================================================================
CONTENTS					*clighter8-contents*
1. Intro			|clighter8-intro|
2. Requirements			|clighter8-requirements|
3. Installation			|clighter8-installation|
4. Options			|clighter8-options|
5. Usage			|clighter8-usage|
6. Compilation Database		|clighter8-compilation-database|
7. Highlight Group		|clighter8-highlight-group|
8. FAQ				|clighter8-faq|
9. LICENSE			|clighter8-license|

==============================================================================
						*clighter8-intro*
1. Intro~

Clighter8 is a server-client Vim syntax highlight plugin, provides following
features:

* On-the-fly, highly customized syntax highlight
* Compilation database supporting
* Awesome color scheme

Github~

https://github.com/bbchung/clighter8

==============================================================================
						*clighter8-requirements*
2. Requirements~

Clighter8 requires the following things:

* Vim with +job and +channel features
* libclang and compatible clang python bindings, (3.9 is recommended)

==============================================================================
						*clighter8-installation*
3. Installation~

Use a Vim plugin manager, for example

Vundle Install~
>
	Bundle 'bbchung/clighter8'
<

==============================================================================
						*clighter8-options*
4. Options~

|g:clighter8_autostart|
|g:clighter8_libclang_path|
|g:clighter8_usage_priority|
|g:clighter8_syntax_priority|
|g:clighter8_highlight_whitelist|
|g:clighter8_highlight_blacklist|
|g:clighter8_global_compile_args|
|g:clighter8_logfile|
|g:clighter8_highlight|

------------------------------------------------------------------------------
*g:clighter8_autostart*

Config Clighter8 to start automatically.

Default: `1`
------------------------------------------------------------------------------
*g:clighter8_libclang_path*

Config the libclang path if libclang is not in default path or Clighter8 can't
find it.

Default: `''`
------------------------------------------------------------------------------
*g:clighter8_usage_priority*

Set the match priority of references.

Default: `-1`
------------------------------------------------------------------------------
*g:clighter8_syntax_priority*

Set the syntex priority of syntax

Default: `-2`
------------------------------------------------------------------------------
*g:clighter8_highlight_whitelist*

Define the group of syntax to highligh.

Default: `[]`

This is the recommend setting to avoid code being dazzled:
>
	let g:clighter8_syntax_groups = ['clighter8NamespaceRef', 'clighter8FunctionDecl']
<
------------------------------------------------------------------------------
*g:clighter8_highlight_blacklist*

Define the group of syntax NOT to highlight. Notice that this option will be
ignored if g:clighter8_highlight_whitelist is set and if both
g:clighter8_highlight_whitelist and g:clighter8_highlight_blacklist are not
set, all groups will be highlighted.

Default: `[]`

This is the recommend setting to avoid code being dazzled:
>
	let g:clighter8_syntax_groups = ['clighter8NamespaceRef', 'clighter8FunctionDecl']
<
------------------------------------------------------------------------------
*g:clighter8_global_compile_args*

The global compile args of Clighter8.

Default: `['-x', 'c++']`
>
	let g:clighter8_global_compile_args = ['-I/usr/local/include']

------------------------------------------------------------------------------
*g:clighter8_logfile*

Set the clighter8 log file path. Notice that this option takes effect after
clighter server restart.

Default: `'/tmp/clighter8.log'`
>
------------------------------------------------------------------------------
*g:clighter8_highlight*

Enable syntax highlight feature or not. To get the better highlight result,
you must set |g:clighter8_global_compile_args| or provide compilation database
under working folder.

Default: `1`

==============================================================================
						*clighter8-usage*
5. Usage ~

Clighter8 provides these commands and functions.

|ClStart|
|ClStop|
|ClRestart|
|ClToggleHighlight|
|ClShowCursorInfo|
|ClShowCompileInfo|
|ClEnableLog|
|ClDisableLog|
|ClLoadCdb|

------------------------------------------------------------------------------
						*ClStart*
ClStart~

Start Clighter8, highlight the code.

------------------------------------------------------------------------------
						*ClStop*
ClStop~

Stop Clighter8.

------------------------------------------------------------------------------
						*ClRestart*
ClRestart~

Restart Clighter8.

------------------------------------------------------------------------------
						*ClToggleHighlight*
ClToggleHighlight~

Toggle highlight function. It is useful when libclang run slow.(ex: include
boost library)

------------------------------------------------------------------------------
						*ShowCursorInfo*
ClShowCursorInfo~

Show cursor informations from libclang. It's useful when debugging.

------------------------------------------------------------------------------
						*ShowCompileInfo*
ClShowCompileInfo~

Show compiler args of current buffer.

------------------------------------------------------------------------------
						*ClEnableLog*
ClEnableLog~

Enable log, the path of log file is '/tmp/clighter8.log'.

------------------------------------------------------------------------------
						*ClDisableLog*
ClDisableLog~

Disable log.

------------------------------------------------------------------------------
						*ClLoadCdb*
ClLoadCdb~

It will start clighter8 and open source files described in compilation
database and all referenced header files under current working folder of Vim.
Notice that it may take long time if the compilation database is big.

==============================================================================
						*clighter8-compilation-database*
6. Compilation Database~

Clighter8 supports compilation database, and it will load the compilation
database in the current working directory. It's strongly recommended to
provide a compilation database for Clighter8 to get the better result of
syntax highlight. For more information about compilation
database, please reference
http://clang.llvm.org/docs/JSONCompilationDatabase.html

==============================================================================
						*clighter8-highlight-group*
7. Highlight Group~

Clighter8 defines following highlight groups corresponded to libclang.

hi default link clighter8Decl Identifier
hi default link clighter8Ref Type
hi default link clighter8Prepro PreProc
hi default link clighter8Stat Keyword

hi default link clighter8StructDecl Identifier
hi default link clighter8UnionDecl Identifier
hi default link clighter8ClassDecl Identifier
hi default link clighter8EnumDecl Identifier
hi default link clighter8FieldDecl Identifier
hi default link clighter8EnumConstantDecl Constant
hi default link clighter8FunctionDecl Identifier
hi default link clighter8VarDecl Identifier
hi default link clighter8ParmDecl Identifier
hi default link clighter8TypedefDecl Identifier
hi default link clighter8CxxMethod Identifier
hi default link clighter8Namespace Identifier
hi default link clighter8Constructor Identifier
hi default link clighter8Destructor Identifier
hi default link clighter8TemplateTypeParameter Identifier
hi default link clighter8TemplateNoneTypeParameter Identifier
hi default link clighter8FunctionTemplate Identifier
hi default link clighter8ClassTemplate Identifier
hi default link clighter8TypeRef Type
hi default link clighter8TemplateRef Type
hi default link clighter8NamespaceRef Type
hi default link clighter8MemberRef Type
hi default link clighter8DeclRefExpr Type
hi default link clighter8MemberRefExpr Type
hi default link clighter8MacroInstantiation Constant
hi default link clighter8InclusionDirective cIncluded

hi default link clighter8Usage IncSearch
You can customize these colors in your colorscheme, for example:
>
    hi clighter8TypeRef term=NONE cterm=NONE ctermbg=232 ctermfg=255 gui=NONE
    hi clighter8ClassDecl term=NONE cterm=NONE ctermbg=255 ctermfg=232 gui=NONE
<
==============================================================================
						*clighter8-faq*
8. FAQ~

------------------------------------------------------------------------------

## Highlight feature doesn't work?
Check |clighter8-requirements| and |clighter8-installation|, and check if a
valid libclang path is given, also, you can check /tmp/clighter8.log.
Remember to set |g:clighter8_global_compile_args| or provide the compilation
database to get the better highlight result.

------------------------------------------------------------------------------

#### How to set compile args?
Clighter8 sets the compile args for each file with
(|g:clighter8_global_compile_args| + "compilation database"). Compile args will
affect the correctness of highlight.

==============================================================================
                                                        *clighter8-license*
9. License ~

This software is licensed under the GPL v3 license.

Note: This license does not cover the files that come from the LLVM or other
third party libraries.

==============================================================================


vim:tw=78:ts=8:noet:ft=help:
